services:
  # Nginx API Gateway
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: meow-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - erp-backend
    networks:
      - meow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MySQL Database Service with custom image
  mysql:
    build:
      context: ./../
      dockerfile: docker/MySQL/Dockerfile
    image: meowmanager-mysql:latest
    container_name: meow-mysql
#    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: meow_db
      MYSQL_USER: meow_user
      MYSQL_PASSWORD: meow_password
      TZ: Asia/Taipei
    ports:
      - "30315:3306"
    volumes:
      - ./MySQL/data:/var/lib/mysql
    networks:
      - meow-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.2
    container_name: meow-phpmyadmin
#    restart: always
    environment:
      PMA_HOST: mysql           # MySQL 服務名稱（Docker Compose 服務名）
      PMA_PORT: 3306            # MySQL 連接埠
      PMA_USER: root            # 預設登入使用者
      PMA_PASSWORD: root        # 預設登入密碼
      PMA_ARBITRARY: 1          # 允許使用者手動輸入其他主機
    ports:
      - "30317:80"
    depends_on:
      - mysql
    networks:
      - meow-network

  # # Redis Service
  # redis:
  #   image: redis:7.4.5
  #   container_name: meow-redis
  #   restart: unless-stopped
  #   ports:
  #     - "30319:6379"
  #   volumes:
  #     - ./redis/data:/data              # 持久化 RDB 快照與 AOF 日誌存放
  #     - ./redis/redis.conf:/usr/local/etc/redis/redis.conf  # 自訂 Redis 設定檔（非必須）
  #   command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
  #   networks:
  #     - meow-network

  # ERP Backend Service
  erp-backend:
    build:
      context: ../src/erp
      dockerfile: Dockerfile
    container_name: meow-erp-backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JAVA_OPTS: "-Xms512m -Xmx1024m -XX:+UseG1GC"
    ports:
      - "30318:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - meow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Core Application Service
  # core:
  #   # Production build configuration (commented out for development)
  #   # build:
  #   #   context: ..
  #   #   dockerfile: docker/core/Dockerfile
    
  #   # Development build configuration
  #   build:
  #     context: ..
  #     dockerfile: docker/core/dockerfile.dev
  #   container_name: meow-core
  #   # restart: unless-stopped
  #   ports:
  #     - "30308:8080"
  #   volumes:
  #     - ../src/core/src:/app/src              # 掛載源碼目錄用於熱重載
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/meow_db
  #     - SPRING_DATASOURCE_USERNAME=meow_user
  #     - SPRING_DATASOURCE_PASSWORD=meow_password
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_REDIS_PORT=6379
  #   depends_on:
  #     - mysql
  #     - redis
  #   networks:
  #     - meow-network

networks:
  meow-network:
    driver: bridge
